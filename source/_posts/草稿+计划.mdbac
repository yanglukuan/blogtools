
## soa && RPC


SOA的应用已经非常普及，毕竟从诞生到现在已经十多年了。1996年由Gartner公司提出，后经过IBM、SUN、BEA、Oracle等公司完善和推广，SOA的思想和理论逐步得到完善。不管是从概念上还是具体应用技术上，都已经得到了全面的发展，也衍生出了很多的概念和技术。
SOA理念
SOA要求开发者从服务集成的角度来设计应用软件，即使这么做的利益不会马上显现。SOA要求开发者超越应用软件来思考，并考虑复用现有的服务，或者检查如何让服务被重复利用。SOA鼓励使用可替代的技术和方法（例如消息机制），通过把服务联系在一起而非编写新代码来构架应用。

维基百科
面向服务的体系结构（英语：service-oriented architecture）是构造分布式计算的应用程序的方法。它将应用程序功能作为服务发送给最终用户或者其他服务。
它采用开放标准、与软件资源进行交互并采用表示的标准方式。
目标为了提高重用性


远程过程调用（英语：Remote Procedure Call，缩写为 RPC）是一个计算机通信协议。该协议允许运行于一台计算机的程序调用另一台计算机的子程序，而程序员无需额外地为这个交互作用编程。如果涉及的软件采用面向对象编程，那么远程过程调用亦可称作远程调用或远程方法调用，例：Java RMI。


1、RPC是实现soa架构的方式，或者叫做SOA架构模式下的调用方式
也可以基于message的方式进行集成和通信

2、web service 是RPC的一种实现方式 主要基于http协议
包括以soap为协议的xml-rpc和以资源状态转义为实现的rest 

web service 
 1、xml-rpc==》 soap(http+xml)
 2、restful (http+json)

3、大量以各种传输协议和序列化协议自研的RPC框架后者分布式服务框架，thrift、gRPC等

RPC框架
仅完成RPC调用
分布式服务框架
RPC调用、服务治理、注册发现、流量监控、服务路由、多传输协议、多序列化协议


rest说明
传统意义上的rest可能要和soa划在一个层面，都是软件架构的方式，soa是面向服务的软件架构方式，rest是面向资源的软件架构方式，不过事实上，一些Web Service提供者提供的REST API只有REST的外壳，传输的请求和应答全然是简化了的SOAP，这种新瓶装旧酒的做法只是加深了标准的分歧而已。归根结底REST无法简单地解决一些应用，因此我们只能看到SOAP在REST外壳下的借尸还魂。所以目前rest还是划分到webservice下的一个分支，用以区分以soap为协议的传统webservice。


通用rpc框架通常使用在内部应用之间的通信，rest通常是使用在外部系统之间（api getway）或者移动应用(restful api)中，一般都是在通用rpc框架之上，对已经实现了soa化的接口再次封装为rest接口


https://zh.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%9E%B6%E6%9E%84
http://www.baike.com/wiki/SOA%E6%9E%B6%E6%9E%84
https://segmentfault.com/q/1010000003049016
http://www.infoq.com/cn/articles/micro-soa-2?utm_source=infoq&utm_campaign=user_page&utm_medium=link
http://www.infoq.com/cn/articles/micro-soa-1?utm_source=infoq&utm_campaign=user_page&utm_medium=link
http://itindex.net/detail/51931-soa-api-%E5%88%86%E8%A3%82
http://www.cnblogs.com/zhangz721/archive/2009/10/02/1577316.html



## 集合框架

## GC

## 多线程

## Spring

## Spring MVC

## java Web && servlet

## XML 处理

##  mybatis

## mysql

## 数据库查询优化 索引 范式  反范式

## 缓存 readis等

## 链接池  数据库链接  网络链接 长连接 短连接

## 网络 OSI模型 TCP/Ip协议  tcp  udp  http 三次握手 

## 各种框架 框架原理 源码 
